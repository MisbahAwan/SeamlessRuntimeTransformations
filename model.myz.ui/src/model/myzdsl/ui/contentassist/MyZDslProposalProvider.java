/*
 * generated by Xtext 2.25.0
 */
package model.myzdsl.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
public class MyZDslProposalProvider extends AbstractMyZDslProposalProvider {
	
    @Override
    public void completeMyZModel_Systemstatespace(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) 
    {
		//completeRuleCall(((RuleCall)assignment.getTerminal()), context, acceptor);
		
		//super.completeMyZModel_Systemstatespace(model, assignment, context, acceptor);
    	
    	// compute the plain proposal
    	  String proposal = "misbah";//model.toString() + "ID";
    	 
    	  // Create and register the completion proposal:
    	  // The proposal may be null as the createCompletionProposal(..) 
    	  // methods check for valid prefixes and terminal token conflicts.
    	  // The acceptor handles null-values gracefully.
    	  acceptor.accept(createCompletionProposal(proposal, context));
	}
  /*  complete_Annotation(EObject model, RuleCall rc, ContentAssistContext ctx, ICompletionProposalAcceptor acceptor) 
    {
        super.complete_Annotation(model, rc, ctx, acceptor)
        if (model == null || model.eContainer == null) {
            return
        }
        val rootModel = model.eContainer as Model
        val annotationDecls = rootModel.elements.filter(AnnotationDecl)
        annotationDecls.forEach [ annDecl |
            val fieldsProposals = annDecl.fields.map[name].map[field|'''«field» = ${«field»}''']
            val fullProposalText = '''@«annDecl.name»(«fieldsProposals.join(' ')»)'''
            val proposal = createCompletionProposal(fullProposalText, annDecl.name, null, ctx)
            acceptor.accept(proposal)
        ]
    }*/
}
