/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyZDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package model.myzdsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package model.myzdsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import model.myzdsl.services.MyZDslGrammarAccess;

}
@parser::members {
	private MyZDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyZDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMyZModel
entryRuleMyZModel
:
{ before(grammarAccess.getMyZModelRule()); }
	 ruleMyZModel
{ after(grammarAccess.getMyZModelRule()); } 
	 EOF 
;

// Rule MyZModel
ruleMyZModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMyZModelAccess().getGroup()); }
		(rule__MyZModel__Group__0)
		{ after(grammarAccess.getMyZModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemStateSpace
entryRuleSystemStateSpace
:
{ before(grammarAccess.getSystemStateSpaceRule()); }
	 ruleSystemStateSpace
{ after(grammarAccess.getSystemStateSpaceRule()); } 
	 EOF 
;

// Rule SystemStateSpace
ruleSystemStateSpace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getGroup()); }
		(rule__SystemStateSpace__Group__0)
		{ after(grammarAccess.getSystemStateSpaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSystemStateSpacePredicate
entryRuleSystemStateSpacePredicate
:
{ before(grammarAccess.getSystemStateSpacePredicateRule()); }
	 ruleSystemStateSpacePredicate
{ after(grammarAccess.getSystemStateSpacePredicateRule()); } 
	 EOF 
;

// Rule SystemStateSpacePredicate
ruleSystemStateSpacePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getAlternatives()); }
		(rule__SystemStateSpacePredicate__Alternatives)
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNN
entryRuleNN
:
{ before(grammarAccess.getNNRule()); }
	 ruleNN
{ after(grammarAccess.getNNRule()); } 
	 EOF 
;

// Rule NN
ruleNN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNNAccess().getAlternatives()); }
		(rule__NN__Alternatives)
		{ after(grammarAccess.getNNAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVBZ
entryRuleVBZ
:
{ before(grammarAccess.getVBZRule()); }
	 ruleVBZ
{ after(grammarAccess.getVBZRule()); } 
	 EOF 
;

// Rule VBZ
ruleVBZ 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVBZAccess().getAlternatives()); }
		(rule__VBZ__Alternatives)
		{ after(grammarAccess.getVBZAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDT
entryRuleDT
:
{ before(grammarAccess.getDTRule()); }
	 ruleDT
{ after(grammarAccess.getDTRule()); } 
	 EOF 
;

// Rule DT
ruleDT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDTAccess().getTheKeyword()); }
		'The'
		{ after(grammarAccess.getDTAccess().getTheKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNNS
entryRuleNNS
:
{ before(grammarAccess.getNNSRule()); }
	 ruleNNS
{ after(grammarAccess.getNNSRule()); } 
	 EOF 
;

// Rule NNS
ruleNNS 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNNSAccess().getAlternatives()); }
		(rule__NNS__Alternatives)
		{ after(grammarAccess.getNNSAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVBP
entryRuleVBP
:
{ before(grammarAccess.getVBPRule()); }
	 ruleVBP
{ after(grammarAccess.getVBPRule()); } 
	 EOF 
;

// Rule VBP
ruleVBP 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVBPAccess().getAlternatives()); }
		(rule__VBP__Alternatives)
		{ after(grammarAccess.getVBPAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJJ
entryRuleJJ
:
{ before(grammarAccess.getJJRule()); }
	 ruleJJ
{ after(grammarAccess.getJJRule()); } 
	 EOF 
;

// Rule JJ
ruleJJ 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJJAccess().getAlternatives()); }
		(rule__JJ__Alternatives)
		{ after(grammarAccess.getJJAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitialState
entryRuleInitialState
:
{ before(grammarAccess.getInitialStateRule()); }
	 ruleInitialState
{ after(grammarAccess.getInitialStateRule()); } 
	 EOF 
;

// Rule InitialState
ruleInitialState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup()); }
		(rule__InitialState__Group__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchema
entryRuleSchema
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup()); }
		(rule__Schema__Group__0)
		{ after(grammarAccess.getSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMD
entryRuleMD
:
{ before(grammarAccess.getMDRule()); }
	 ruleMD
{ after(grammarAccess.getMDRule()); } 
	 EOF 
;

// Rule MD
ruleMD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMDAccess().getAlternatives()); }
		(rule__MD__Alternatives)
		{ after(grammarAccess.getMDAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVBG
entryRuleVBG
:
{ before(grammarAccess.getVBGRule()); }
	 ruleVBG
{ after(grammarAccess.getVBGRule()); } 
	 EOF 
;

// Rule VBG
ruleVBG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVBGAccess().getAlternatives()); }
		(rule__VBG__Alternatives)
		{ after(grammarAccess.getVBGAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicate
entryRulePredicate
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup()); }
		(rule__Predicate__Group__0)
		{ after(grammarAccess.getPredicateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchemaState
entryRuleSchemaState
:
{ before(grammarAccess.getSchemaStateRule()); }
	 ruleSchemaState
{ after(grammarAccess.getSchemaStateRule()); } 
	 EOF 
;

// Rule SchemaState
ruleSchemaState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaStateAccess().getAlternatives()); }
		(rule__SchemaState__Alternatives)
		{ after(grammarAccess.getSchemaStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariables
entryRuleVariables
:
{ before(grammarAccess.getVariablesRule()); }
	 ruleVariables
{ after(grammarAccess.getVariablesRule()); } 
	 EOF 
;

// Rule Variables
ruleVariables 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariablesAccess().getNameAssignment()); }
		(rule__Variables__NameAssignment)
		{ after(grammarAccess.getVariablesAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBelongsState
entryRuleBelongsState
:
{ before(grammarAccess.getBelongsStateRule()); }
	 ruleBelongsState
{ after(grammarAccess.getBelongsStateRule()); } 
	 EOF 
;

// Rule BelongsState
ruleBelongsState 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBelongsStateAccess().getAlternatives()); }
		(rule__BelongsState__Alternatives)
		{ after(grammarAccess.getBelongsStateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionList
entryRuleFunctionList
:
{ before(grammarAccess.getFunctionListRule()); }
	 ruleFunctionList
{ after(grammarAccess.getFunctionListRule()); } 
	 EOF 
;

// Rule FunctionList
ruleFunctionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionListAccess().getAlternatives()); }
		(rule__FunctionList__Alternatives)
		{ after(grammarAccess.getFunctionListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicatePostCondition1
entryRulePredicatePostCondition1
:
{ before(grammarAccess.getPredicatePostCondition1Rule()); }
	 rulePredicatePostCondition1
{ after(grammarAccess.getPredicatePostCondition1Rule()); } 
	 EOF 
;

// Rule PredicatePostCondition1
rulePredicatePostCondition1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicatePostCondition1Access().getGroup()); }
		(rule__PredicatePostCondition1__Group__0)
		{ after(grammarAccess.getPredicatePostCondition1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePredicatePostCondition2
entryRulePredicatePostCondition2
:
{ before(grammarAccess.getPredicatePostCondition2Rule()); }
	 rulePredicatePostCondition2
{ after(grammarAccess.getPredicatePostCondition2Rule()); } 
	 EOF 
;

// Rule PredicatePostCondition2
rulePredicatePostCondition2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPredicatePostCondition2Access().getGroup()); }
		(rule__PredicatePostCondition2__Group__0)
		{ after(grammarAccess.getPredicatePostCondition2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getGroup_0_0()); }
		(rule__SystemStateSpace__Group_0_0__0)
		{ after(grammarAccess.getSystemStateSpaceAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getGroup_0_1()); }
		(rule__SystemStateSpace__Group_0_1__0)
		{ after(grammarAccess.getSystemStateSpaceAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getGroup_1_0()); }
		(rule__SystemStateSpace__Group_1_0__0)
		{ after(grammarAccess.getSystemStateSpaceAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getGroup_1_1()); }
		(rule__SystemStateSpace__Group_1_1__0)
		{ after(grammarAccess.getSystemStateSpaceAccess().getGroup_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_2()); }
		ruleNNS
		{ after(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_0()); }
		(rule__SystemStateSpacePredicate__Group_0__0)
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_1()); }
		(rule__SystemStateSpacePredicate__Group_1__0)
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NN__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNNAccess().getSystemKeyword_0()); }
		'system'
		{ after(grammarAccess.getNNAccess().getSystemKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getStateKeyword_1()); }
		'state'
		{ after(grammarAccess.getNNAccess().getStateKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getSpaceKeyword_2()); }
		'space'
		{ after(grammarAccess.getNNAccess().getSpaceKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getInitialKeyword_3()); }
		'initial'
		{ after(grammarAccess.getNNAccess().getInitialKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getPredicateKeyword_4()); }
		'predicate'
		{ after(grammarAccess.getNNAccess().getPredicateKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getVariableKeyword_5()); }
		'variable'
		{ after(grammarAccess.getNNAccess().getVariableKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getVariablesKeyword_6()); }
		'variables'
		{ after(grammarAccess.getNNAccess().getVariablesKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getSchemaKeyword_7()); }
		'schema'
		{ after(grammarAccess.getNNAccess().getSchemaKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getOperationKeyword_8()); }
		'operation'
		{ after(grammarAccess.getNNAccess().getOperationKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getFunctionKeyword_9()); }
		'function'
		{ after(grammarAccess.getNNAccess().getFunctionKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getInputKeyword_10()); }
		'input'
		{ after(grammarAccess.getNNAccess().getInputKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getOutputKeyword_11()); }
		'output'
		{ after(grammarAccess.getNNAccess().getOutputKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getNNAccess().getNameKeyword_12()); }
		'name'
		{ after(grammarAccess.getNNAccess().getNameKeyword_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VBZ__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVBZAccess().getIsKeyword_0()); }
		'is'
		{ after(grammarAccess.getVBZAccess().getIsKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVBZAccess().getAreKeyword_1()); }
		'are'
		{ after(grammarAccess.getVBZAccess().getAreKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NNS__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNNSAccess().getVariablesKeyword_0()); }
		'variables'
		{ after(grammarAccess.getNNSAccess().getVariablesKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNNSAccess().getParametersKeyword_1()); }
		'parameters'
		{ after(grammarAccess.getNNSAccess().getParametersKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getNNSAccess().getFeaturesKeyword_2()); }
		'features'
		{ after(grammarAccess.getNNSAccess().getFeaturesKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getNNSAccess().getVariableKeyword_3()); }
		'variable'
		{ after(grammarAccess.getNNSAccess().getVariableKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getNNSAccess().getParameterKeyword_4()); }
		'parameter'
		{ after(grammarAccess.getNNSAccess().getParameterKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getNNSAccess().getFeatureKeyword_5()); }
		'feature'
		{ after(grammarAccess.getNNSAccess().getFeatureKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VBP__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVBPAccess().getIncludeKeyword_0()); }
		'include'
		{ after(grammarAccess.getVBPAccess().getIncludeKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVBPAccess().getIncludesKeyword_1()); }
		'includes'
		{ after(grammarAccess.getVBPAccess().getIncludesKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getVBPAccess().getIsKeyword_2()); }
		'is'
		{ after(grammarAccess.getVBPAccess().getIsKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getVBPAccess().getAreKeyword_3()); }
		'are'
		{ after(grammarAccess.getVBPAccess().getAreKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JJ__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJJAccess().getPredicateKeyword_0()); }
		'predicate'
		{ after(grammarAccess.getJJAccess().getPredicateKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getJJAccess().getInitialKeyword_1()); }
		'initial'
		{ after(grammarAccess.getJJAccess().getInitialKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getJJAccess().getPostconditionKeyword_2()); }
		'postcondition'
		{ after(grammarAccess.getJJAccess().getPostconditionKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getJJAccess().getPostConditionKeyword_3()); }
		'post condition'
		{ after(grammarAccess.getJJAccess().getPostConditionKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup_4_0()); }
		(rule__InitialState__Group_4_0__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup_4_1()); }
		(rule__InitialState__Group_4_1__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Alternatives_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup_7_0()); }
		(rule__InitialState__Group_7_0__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup_7_0()); }
	)
	|
	(
		{ before(grammarAccess.getInitialStateAccess().getGroup_7_1()); }
		(rule__InitialState__Group_7_1__0)
		{ after(grammarAccess.getInitialStateAccess().getGroup_7_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup_3_0()); }
		(rule__Schema__Group_3_0__0)
		{ after(grammarAccess.getSchemaAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaAccess().getGroup_3_1()); }
		(rule__Schema__Group_3_1__0)
		{ after(grammarAccess.getSchemaAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup_6_0()); }
		(rule__Schema__Group_6_0__0)
		{ after(grammarAccess.getSchemaAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaAccess().getGroup_6_1()); }
		(rule__Schema__Group_6_1__0)
		{ after(grammarAccess.getSchemaAccess().getGroup_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MD__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMDAccess().getWillKeyword_0()); }
		'will'
		{ after(grammarAccess.getMDAccess().getWillKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMDAccess().getAreKeyword_1()); }
		'are'
		{ after(grammarAccess.getMDAccess().getAreKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VBG__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVBGAccess().getChangingKeyword_0()); }
		'changing'
		{ after(grammarAccess.getVBGAccess().getChangingKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getVBGAccess().getChangeKeyword_1()); }
		'change'
		{ after(grammarAccess.getVBGAccess().getChangeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_0_0()); }
		(rule__Predicate__Group_0_0__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_0_1()); }
		(rule__Predicate__Group_0_1__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_4_0()); }
		(rule__Predicate__Group_4_0__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_4_1()); }
		(rule__Predicate__Group_4_1__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_6_0()); }
		(rule__Predicate__Group_6_0__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_6_1()); }
		(rule__Predicate__Group_6_1__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_6_1()); }
	)
	|
	(
		{ before(grammarAccess.getPredicateAccess().getGroup_6_2()); }
		(rule__Predicate__Group_6_2__0)
		{ after(grammarAccess.getPredicateAccess().getGroup_6_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SchemaState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaStateAccess().getCHANGEKeyword_0()); }
		'CHANGE'
		{ after(grammarAccess.getSchemaStateAccess().getCHANGEKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSchemaStateAccess().getNOTCHANGEKeyword_1()); }
		'NOT CHANGE'
		{ after(grammarAccess.getSchemaStateAccess().getNOTCHANGEKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BelongsState__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBelongsStateAccess().getBELONGSTOKeyword_0()); }
		'BELONGS TO'
		{ after(grammarAccess.getBelongsStateAccess().getBELONGSTOKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBelongsStateAccess().getDOESNOTBELONGTOKeyword_1()); }
		'DOES NOT BELONG TO'
		{ after(grammarAccess.getBelongsStateAccess().getDOESNOTBELONGTOKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionListAccess().getDomKeyword_0()); }
		'dom'
		{ after(grammarAccess.getFunctionListAccess().getDomKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionListAccess().getRangeKeyword_1()); }
		'range'
		{ after(grammarAccess.getFunctionListAccess().getRangeKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyZModel__Group__0__Impl
	rule__MyZModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyZModelAccess().getSystemstatespaceAssignment_0()); }
	(rule__MyZModel__SystemstatespaceAssignment_0)
	{ after(grammarAccess.getMyZModelAccess().getSystemstatespaceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyZModel__Group__1__Impl
	rule__MyZModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyZModelAccess().getInitialstateAssignment_1()); }
	(rule__MyZModel__InitialstateAssignment_1)
	{ after(grammarAccess.getMyZModelAccess().getInitialstateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MyZModel__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMyZModelAccess().getSchemasAssignment_2()); }
	(rule__MyZModel__SchemasAssignment_2)*
	{ after(grammarAccess.getMyZModelAccess().getSchemasAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group__0__Impl
	rule__SystemStateSpace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getAlternatives_0()); }
	(rule__SystemStateSpace__Alternatives_0)
	{ after(grammarAccess.getSystemStateSpaceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group__1__Impl
	rule__SystemStateSpace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getAlternatives_1()); }
	(rule__SystemStateSpace__Alternatives_1)
	{ after(grammarAccess.getSystemStateSpaceAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group__2__Impl
	rule__SystemStateSpace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVariablesAssignment_2()); }
	(rule__SystemStateSpace__VariablesAssignment_2)
	{ after(grammarAccess.getSystemStateSpaceAccess().getVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group__3__Impl
	rule__SystemStateSpace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getGroup_3()); }
	(rule__SystemStateSpace__Group_3__0)*
	{ after(grammarAccess.getSystemStateSpaceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getPredicateAssignment_4()); }
	(rule__SystemStateSpace__PredicateAssignment_4)
	{ after(grammarAccess.getSystemStateSpaceAccess().getPredicateAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_0__0__Impl
	rule__SystemStateSpace__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_0()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_0__1__Impl
	rule__SystemStateSpace__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_1()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_0__2__Impl
	rule__SystemStateSpace__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_2()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_0__3__Impl
	rule__SystemStateSpace__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVBZParserRuleCall_0_0_3()); }
	ruleVBZ
	{ after(grammarAccess.getSystemStateSpaceAccess().getVBZParserRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNameAssignment_0_0_4()); }
	(rule__SystemStateSpace__NameAssignment_0_0_4)
	{ after(grammarAccess.getSystemStateSpaceAccess().getNameAssignment_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_1__0__Impl
	rule__SystemStateSpace__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNameAssignment_0_1_0()); }
	(rule__SystemStateSpace__NameAssignment_0_1_0)
	{ after(grammarAccess.getSystemStateSpaceAccess().getNameAssignment_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_1__1__Impl
	rule__SystemStateSpace__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVBZParserRuleCall_0_1_1()); }
	ruleVBZ
	{ after(grammarAccess.getSystemStateSpaceAccess().getVBZParserRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_1__2__Impl
	rule__SystemStateSpace__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_2()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_1__3__Impl
	rule__SystemStateSpace__Group_0_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_3()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_0_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_0_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_4()); }
	ruleNN
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNParserRuleCall_0_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_1_0__0__Impl
	rule__SystemStateSpace__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getDTParserRuleCall_1_0_0()); }
	ruleDT
	{ after(grammarAccess.getSystemStateSpaceAccess().getDTParserRuleCall_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_1_0__1__Impl
	rule__SystemStateSpace__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_0_1()); }
	ruleNNS
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_0_2()); }
	ruleVBP
	{ after(grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_1_1__0__Impl
	rule__SystemStateSpace__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_1_0()); }
	ruleNNS
	{ after(grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_1_1()); }
	ruleVBP
	{ after(grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpace__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_3__0__Impl
	rule__SystemStateSpace__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getSystemStateSpaceAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpace__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpaceAccess().getVariablesAssignment_3_1()); }
	(rule__SystemStateSpace__VariablesAssignment_3_1)
	{ after(grammarAccess.getSystemStateSpaceAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpacePredicate__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__0__Impl
	rule__SystemStateSpacePredicate__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getDTParserRuleCall_0_0()); }
	ruleDT
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getDTParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__1__Impl
	rule__SystemStateSpacePredicate__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getJJParserRuleCall_0_1()); }
	ruleJJ
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getJJParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__2__Impl
	rule__SystemStateSpacePredicate__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getNNSParserRuleCall_0_2()); }
	ruleNNS
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getNNSParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__3__Impl
	rule__SystemStateSpacePredicate__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVBPParserRuleCall_0_3()); }
	ruleVBP
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVBPParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__4__Impl
	rule__SystemStateSpacePredicate__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_0_4()); }
	(rule__SystemStateSpacePredicate__VasAssignment_0_4)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__5__Impl
	rule__SystemStateSpacePredicate__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_0_5()); }
	(rule__SystemStateSpacePredicate__Group_0_5__0)*
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__6__Impl
	rule__SystemStateSpacePredicate__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionAssignment_0_6()); }
	(rule__SystemStateSpacePredicate__FunctionAssignment_0_6)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionAssignment_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarAssignment_0_7()); }
	(rule__SystemStateSpacePredicate__PredicateVarAssignment_0_7)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarAssignment_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpacePredicate__Group_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0_5__0__Impl
	rule__SystemStateSpacePredicate__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getCommaKeyword_0_5_0()); }
	','
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getCommaKeyword_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_0_5_1()); }
	(rule__SystemStateSpacePredicate__VasAssignment_0_5_1)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpacePredicate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__0__Impl
	rule__SystemStateSpacePredicate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getJJParserRuleCall_1_0()); }
	ruleJJ
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getJJParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__1__Impl
	rule__SystemStateSpacePredicate__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getNNSParserRuleCall_1_1()); }
	ruleNNS
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getNNSParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__2__Impl
	rule__SystemStateSpacePredicate__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVBPParserRuleCall_1_2()); }
	ruleVBP
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVBPParserRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__3__Impl
	rule__SystemStateSpacePredicate__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_1_3()); }
	(rule__SystemStateSpacePredicate__VasAssignment_1_3)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__4__Impl
	rule__SystemStateSpacePredicate__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_1_4()); }
	(rule__SystemStateSpacePredicate__Group_1_4__0)*
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__5__Impl
	rule__SystemStateSpacePredicate__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionAssignment_1_5()); }
	(rule__SystemStateSpacePredicate__FunctionAssignment_1_5)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionAssignment_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarAssignment_1_6()); }
	(rule__SystemStateSpacePredicate__PredicateVarAssignment_1_6)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SystemStateSpacePredicate__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1_4__0__Impl
	rule__SystemStateSpacePredicate__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getCommaKeyword_1_4_0()); }
	','
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getCommaKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SystemStateSpacePredicate__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_1_4_1()); }
	(rule__SystemStateSpacePredicate__VasAssignment_1_4_1)
	{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__0__Impl
	rule__InitialState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getJJParserRuleCall_0()); }
	ruleJJ
	{ after(grammarAccess.getInitialStateAccess().getJJParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__1__Impl
	rule__InitialState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNNParserRuleCall_1()); }
	ruleNN
	{ after(grammarAccess.getInitialStateAccess().getNNParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__2__Impl
	rule__InitialState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVBZParserRuleCall_2()); }
	ruleVBZ
	{ after(grammarAccess.getInitialStateAccess().getVBZParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__3__Impl
	rule__InitialState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNameAssignment_3()); }
	(rule__InitialState__NameAssignment_3)
	{ after(grammarAccess.getInitialStateAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__4__Impl
	rule__InitialState__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getAlternatives_4()); }
	(rule__InitialState__Alternatives_4)
	{ after(grammarAccess.getInitialStateAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__5__Impl
	rule__InitialState__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVariablesAssignment_5()); }
	(rule__InitialState__VariablesAssignment_5)
	{ after(grammarAccess.getInitialStateAccess().getVariablesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__6__Impl
	rule__InitialState__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getGroup_6()); }
	(rule__InitialState__Group_6__0)*
	{ after(grammarAccess.getInitialStateAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__7__Impl
	rule__InitialState__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getAlternatives_7()); }
	(rule__InitialState__Alternatives_7)
	{ after(grammarAccess.getInitialStateAccess().getAlternatives_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getPredAssignment_8()); }
	(rule__InitialState__PredAssignment_8)
	{ after(grammarAccess.getInitialStateAccess().getPredAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_0__0__Impl
	rule__InitialState__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getDTParserRuleCall_4_0_0()); }
	ruleDT
	{ after(grammarAccess.getInitialStateAccess().getDTParserRuleCall_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_0__1__Impl
	rule__InitialState__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_0_1()); }
	ruleJJ
	{ after(grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_0__2__Impl
	rule__InitialState__Group_4_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_0_2()); }
	ruleNNS
	{ after(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_0_3()); }
	ruleVBP
	{ after(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_1__0__Impl
	rule__InitialState__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_1_0()); }
	ruleJJ
	{ after(grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_1__1__Impl
	rule__InitialState__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_1_1()); }
	ruleNNS
	{ after(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_1_2()); }
	ruleVBP
	{ after(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_6__0__Impl
	rule__InitialState__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getInitialStateAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVariablesAssignment_6_1()); }
	(rule__InitialState__VariablesAssignment_6_1)
	{ after(grammarAccess.getInitialStateAccess().getVariablesAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_7_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_0__0__Impl
	rule__InitialState__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getDTParserRuleCall_7_0_0()); }
	ruleDT
	{ after(grammarAccess.getInitialStateAccess().getDTParserRuleCall_7_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_0__1__Impl
	rule__InitialState__Group_7_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_0_1()); }
	ruleJJ
	{ after(grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_0__2__Impl
	rule__InitialState__Group_7_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_0_2()); }
	ruleNNS
	{ after(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_0_3()); }
	ruleVBP
	{ after(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InitialState__Group_7_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_1__0__Impl
	rule__InitialState__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_1_0()); }
	ruleJJ
	{ after(grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_1__1__Impl
	rule__InitialState__Group_7_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_1_1()); }
	ruleNNS
	{ after(grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InitialState__Group_7_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__Group_7_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_1_2()); }
	ruleVBP
	{ after(grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_0()); }
	(rule__Schema__Group_0__0)
	{ after(grammarAccess.getSchemaAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getStateAssignment_1()); }
	(rule__Schema__StateAssignment_1)
	{ after(grammarAccess.getSchemaAccess().getStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__2__Impl
	rule__Schema__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNameSchemaAssignment_2()); }
	(rule__Schema__NameSchemaAssignment_2)
	{ after(grammarAccess.getSchemaAccess().getNameSchemaAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__3__Impl
	rule__Schema__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getAlternatives_3()); }
	(rule__Schema__Alternatives_3)
	{ after(grammarAccess.getSchemaAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__4__Impl
	rule__Schema__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVarsInputAssignment_4()); }
	(rule__Schema__VarsInputAssignment_4)
	{ after(grammarAccess.getSchemaAccess().getVarsInputAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__5__Impl
	rule__Schema__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_5()); }
	(rule__Schema__Group_5__0)*
	{ after(grammarAccess.getSchemaAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__6__Impl
	rule__Schema__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getAlternatives_6()); }
	(rule__Schema__Alternatives_6)
	{ after(grammarAccess.getSchemaAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__7__Impl
	rule__Schema__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVarsOutputAssignment_7()); }
	(rule__Schema__VarsOutputAssignment_7)
	{ after(grammarAccess.getSchemaAccess().getVarsOutputAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__8__Impl
	rule__Schema__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getGroup_8()); }
	(rule__Schema__Group_8__0)*
	{ after(grammarAccess.getSchemaAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getPredicatesAssignment_9()); }
	(rule__Schema__PredicatesAssignment_9)
	{ after(grammarAccess.getSchemaAccess().getPredicatesAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__0__Impl
	rule__Schema__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_0()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__1__Impl
	rule__Schema__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_1()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__2__Impl
	rule__Schema__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_2()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__3__Impl
	rule__Schema__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVBZParserRuleCall_0_3()); }
	ruleVBZ
	{ after(grammarAccess.getSchemaAccess().getVBZParserRuleCall_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__4__Impl
	rule__Schema__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNameAssignment_0_4()); }
	(rule__Schema__NameAssignment_0_4)
	{ after(grammarAccess.getSchemaAccess().getNameAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__5__Impl
	rule__Schema__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_5()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__6__Impl
	rule__Schema__Group_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_6()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_0_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_0__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_0__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getMDParserRuleCall_0_7()); }
	ruleMD
	{ after(grammarAccess.getSchemaAccess().getMDParserRuleCall_0_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_0__0__Impl
	rule__Schema__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getDTParserRuleCall_3_0_0()); }
	ruleDT
	{ after(grammarAccess.getSchemaAccess().getDTParserRuleCall_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_0__1__Impl
	rule__Schema__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_3_0_1()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_0__2__Impl
	rule__Schema__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_0_2()); }
	ruleNNS
	{ after(grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_0_3()); }
	ruleVBP
	{ after(grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_1__0__Impl
	rule__Schema__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_3_1_0()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_1__1__Impl
	rule__Schema__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_1_1()); }
	ruleNNS
	{ after(grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_1_2()); }
	ruleVBP
	{ after(grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__0__Impl
	rule__Schema__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getSchemaAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVarsInputAssignment_5_1()); }
	(rule__Schema__VarsInputAssignment_5_1)
	{ after(grammarAccess.getSchemaAccess().getVarsInputAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_0__0__Impl
	rule__Schema__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getDTParserRuleCall_6_0_0()); }
	ruleDT
	{ after(grammarAccess.getSchemaAccess().getDTParserRuleCall_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_0__1__Impl
	rule__Schema__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_6_0_1()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_0__2__Impl
	rule__Schema__Group_6_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_0_2()); }
	ruleNNS
	{ after(grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_0_3()); }
	ruleVBP
	{ after(grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_1__0__Impl
	rule__Schema__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNParserRuleCall_6_1_0()); }
	ruleNN
	{ after(grammarAccess.getSchemaAccess().getNNParserRuleCall_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_1__1__Impl
	rule__Schema__Group_6_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_1_1()); }
	ruleNNS
	{ after(grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_6_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_6_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_1_2()); }
	ruleVBP
	{ after(grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_8__0__Impl
	rule__Schema__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getSchemaAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getVarsOutputAssignment_8_1()); }
	(rule__Schema__VarsOutputAssignment_8_1)
	{ after(grammarAccess.getSchemaAccess().getVarsOutputAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getAlternatives_0()); }
	(rule__Predicate__Alternatives_0)?
	{ after(grammarAccess.getPredicateAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__1__Impl
	rule__Predicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVasInputAssignment_1()); }
	(rule__Predicate__VasInputAssignment_1)?
	{ after(grammarAccess.getPredicateAccess().getVasInputAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__2__Impl
	rule__Predicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getBelongsAssignment_2()); }
	(rule__Predicate__BelongsAssignment_2)?
	{ after(grammarAccess.getPredicateAccess().getBelongsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__3__Impl
	rule__Predicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getBelongsVariableAssignment_3()); }
	(rule__Predicate__BelongsVariableAssignment_3)?
	{ after(grammarAccess.getPredicateAccess().getBelongsVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__4__Impl
	rule__Predicate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getAlternatives_4()); }
	(rule__Predicate__Alternatives_4)?
	{ after(grammarAccess.getPredicateAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__5__Impl
	rule__Predicate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVasOutputAssignment_5()); }
	(rule__Predicate__VasOutputAssignment_5)?
	{ after(grammarAccess.getPredicateAccess().getVasOutputAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__6__Impl
	rule__Predicate__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getAlternatives_6()); }
	(rule__Predicate__Alternatives_6)?
	{ after(grammarAccess.getPredicateAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVasStateChangeAssignment_7()); }
	(rule__Predicate__VasStateChangeAssignment_7)?
	{ after(grammarAccess.getPredicateAccess().getVasStateChangeAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_0__0__Impl
	rule__Predicate__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getDTParserRuleCall_0_0_0()); }
	ruleDT
	{ after(grammarAccess.getPredicateAccess().getDTParserRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_0__1__Impl
	rule__Predicate__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_0_0_1()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_0__2__Impl
	rule__Predicate__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_2()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_0__3__Impl
	rule__Predicate__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_3()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_0_4()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_1__0__Impl
	rule__Predicate__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_0_1_0()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_1__1__Impl
	rule__Predicate__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_1()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_1__2__Impl
	rule__Predicate__Group_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_2()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_0_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_1_3()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_0__0__Impl
	rule__Predicate__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getDTParserRuleCall_4_0_0()); }
	ruleDT
	{ after(grammarAccess.getPredicateAccess().getDTParserRuleCall_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_0__1__Impl
	rule__Predicate__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_4_0_1()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_0__2__Impl
	rule__Predicate__Group_4_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_2()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_0__3__Impl
	rule__Predicate__Group_4_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_3()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_0_4()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_1__0__Impl
	rule__Predicate__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_4_1_0()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_1__1__Impl
	rule__Predicate__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_1()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_1__2__Impl
	rule__Predicate__Group_4_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_2()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_4_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_4_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_1_3()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_6_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__0__Impl
	rule__Predicate__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getDTParserRuleCall_6_0_0()); }
	ruleDT
	{ after(grammarAccess.getPredicateAccess().getDTParserRuleCall_6_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__1__Impl
	rule__Predicate__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_6_0_1()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_6_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__2__Impl
	rule__Predicate__Group_6_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_2()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__3__Impl
	rule__Predicate__Group_6_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_0_3()); }
	ruleVBG
	{ after(grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__4__Impl
	rule__Predicate__Group_6_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_4()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_0_5()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_6_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_1__0__Impl
	rule__Predicate__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_1_0()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_1_1()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_6_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_2__0__Impl
	rule__Predicate__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getJJParserRuleCall_6_2_0()); }
	ruleJJ
	{ after(grammarAccess.getPredicateAccess().getJJParserRuleCall_6_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_2__1__Impl
	rule__Predicate__Group_6_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_1()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_2__2__Impl
	rule__Predicate__Group_6_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_2_2()); }
	ruleVBG
	{ after(grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_2__3__Impl
	rule__Predicate__Group_6_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_3()); }
	ruleNN
	{ after(grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Predicate__Group_6_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_6_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_2_4()); }
	ruleVBZ
	{ after(grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicatePostCondition1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__0__Impl
	rule__PredicatePostCondition1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getCondition11Assignment_0()); }
	(rule__PredicatePostCondition1__Condition11Assignment_0)?
	{ after(grammarAccess.getPredicatePostCondition1Access().getCondition11Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__1__Impl
	rule__PredicatePostCondition1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getWithKeyword_1()); }
	('with')?
	{ after(grammarAccess.getPredicatePostCondition1Access().getWithKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__2__Impl
	rule__PredicatePostCondition1__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getNewKeyword_2()); }
	('new')?
	{ after(grammarAccess.getPredicatePostCondition1Access().getNewKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__3__Impl
	rule__PredicatePostCondition1__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getCondition12Assignment_3()); }
	(rule__PredicatePostCondition1__Condition12Assignment_3)?
	{ after(grammarAccess.getPredicatePostCondition1Access().getCondition12Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__4__Impl
	rule__PredicatePostCondition1__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getAndKeyword_4()); }
	('and ')?
	{ after(grammarAccess.getPredicatePostCondition1Access().getAndKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__5__Impl
	rule__PredicatePostCondition1__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getCondition13Assignment_5()); }
	(rule__PredicatePostCondition1__Condition13Assignment_5)
	{ after(grammarAccess.getPredicatePostCondition1Access().getCondition13Assignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getGroup_6()); }
	(rule__PredicatePostCondition1__Group_6__0)?
	{ after(grammarAccess.getPredicatePostCondition1Access().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicatePostCondition1__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group_6__0__Impl
	rule__PredicatePostCondition1__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getPredicatePostCondition1Access().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition1__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition1Access().getCondition13Assignment_6_1()); }
	(rule__PredicatePostCondition1__Condition13Assignment_6_1)
	{ after(grammarAccess.getPredicatePostCondition1Access().getCondition13Assignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicatePostCondition2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__0__Impl
	rule__PredicatePostCondition2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getCondition21Assignment_0()); }
	(rule__PredicatePostCondition2__Condition21Assignment_0)?
	{ after(grammarAccess.getPredicatePostCondition2Access().getCondition21Assignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__1__Impl
	rule__PredicatePostCondition2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getWhereKeyword_1()); }
	('where')?
	{ after(grammarAccess.getPredicatePostCondition2Access().getWhereKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__2__Impl
	rule__PredicatePostCondition2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getCondition22Assignment_2()); }
	(rule__PredicatePostCondition2__Condition22Assignment_2)?
	{ after(grammarAccess.getPredicatePostCondition2Access().getCondition22Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__3__Impl
	rule__PredicatePostCondition2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getBELONGTOKeyword_3()); }
	('BELONG TO')?
	{ after(grammarAccess.getPredicatePostCondition2Access().getBELONGTOKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__4__Impl
	rule__PredicatePostCondition2__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getCondition23Assignment_4()); }
	(rule__PredicatePostCondition2__Condition23Assignment_4)
	{ after(grammarAccess.getPredicatePostCondition2Access().getCondition23Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getGroup_5()); }
	(rule__PredicatePostCondition2__Group_5__0)?
	{ after(grammarAccess.getPredicatePostCondition2Access().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PredicatePostCondition2__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group_5__0__Impl
	rule__PredicatePostCondition2__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getPredicatePostCondition2Access().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PredicatePostCondition2__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPredicatePostCondition2Access().getCondition23Assignment_5_1()); }
	(rule__PredicatePostCondition2__Condition23Assignment_5_1)
	{ after(grammarAccess.getPredicatePostCondition2Access().getCondition23Assignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MyZModel__SystemstatespaceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyZModelAccess().getSystemstatespaceSystemStateSpaceParserRuleCall_0_0()); }
		ruleSystemStateSpace
		{ after(grammarAccess.getMyZModelAccess().getSystemstatespaceSystemStateSpaceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__InitialstateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyZModelAccess().getInitialstateInitialStateParserRuleCall_1_0()); }
		ruleInitialState
		{ after(grammarAccess.getMyZModelAccess().getInitialstateInitialStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MyZModel__SchemasAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMyZModelAccess().getSchemasSchemaParserRuleCall_2_0()); }
		ruleSchema
		{ after(grammarAccess.getMyZModelAccess().getSchemasSchemaParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__NameAssignment_0_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getNameIDTerminalRuleCall_0_0_4_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemStateSpaceAccess().getNameIDTerminalRuleCall_0_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__NameAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getNameIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getSystemStateSpaceAccess().getNameIDTerminalRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getVariablesVariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpaceAccess().getVariablesVariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getVariablesVariablesParserRuleCall_3_1_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpaceAccess().getVariablesVariablesParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpace__PredicateAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpaceAccess().getPredicateSystemStateSpacePredicateParserRuleCall_4_0()); }
		ruleSystemStateSpacePredicate
		{ after(grammarAccess.getSystemStateSpaceAccess().getPredicateSystemStateSpacePredicateParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__VasAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_0_4_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__VasAssignment_0_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_0_5_1_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_0_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__FunctionAssignment_0_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionFunctionListParserRuleCall_0_6_0()); }
		ruleFunctionList
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionFunctionListParserRuleCall_0_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__PredicateVarAssignment_0_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarVariablesParserRuleCall_0_7_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarVariablesParserRuleCall_0_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__VasAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_1_3_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__VasAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_1_4_1_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getVasVariablesParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__FunctionAssignment_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionFunctionListParserRuleCall_1_5_0()); }
		ruleFunctionList
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getFunctionFunctionListParserRuleCall_1_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SystemStateSpacePredicate__PredicateVarAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarVariablesParserRuleCall_1_6_0()); }
		ruleVariables
		{ after(grammarAccess.getSystemStateSpacePredicateAccess().getPredicateVarVariablesParserRuleCall_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getInitialStateAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__VariablesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getVariablesVariablesParserRuleCall_5_0()); }
		ruleVariables
		{ after(grammarAccess.getInitialStateAccess().getVariablesVariablesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__VariablesAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getVariablesVariablesParserRuleCall_6_1_0()); }
		ruleVariables
		{ after(grammarAccess.getInitialStateAccess().getVariablesVariablesParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InitialState__PredAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialStateAccess().getPredVariablesParserRuleCall_8_0()); }
		ruleVariables
		{ after(grammarAccess.getInitialStateAccess().getPredVariablesParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__NameAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_0_4_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__StateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getStateSchemaStateParserRuleCall_1_0()); }
		ruleSchemaState
		{ after(grammarAccess.getSchemaAccess().getStateSchemaStateParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__NameSchemaAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getNameSchemaEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSchemaAccess().getNameSchemaEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__VarsInputAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getVarsInputVariablesParserRuleCall_4_0()); }
		ruleVariables
		{ after(grammarAccess.getSchemaAccess().getVarsInputVariablesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__VarsInputAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getVarsInputVariablesParserRuleCall_5_1_0()); }
		ruleVariables
		{ after(grammarAccess.getSchemaAccess().getVarsInputVariablesParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__VarsOutputAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getVarsOutputVariablesParserRuleCall_7_0()); }
		ruleVariables
		{ after(grammarAccess.getSchemaAccess().getVarsOutputVariablesParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__VarsOutputAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getVarsOutputVariablesParserRuleCall_8_1_0()); }
		ruleVariables
		{ after(grammarAccess.getSchemaAccess().getVarsOutputVariablesParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__PredicatesAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getPredicatesPredicateParserRuleCall_9_0()); }
		rulePredicate
		{ after(grammarAccess.getSchemaAccess().getPredicatesPredicateParserRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__VasInputAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getVasInputVariablesParserRuleCall_1_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicateAccess().getVasInputVariablesParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__BelongsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getBelongsBelongsStateParserRuleCall_2_0()); }
		ruleBelongsState
		{ after(grammarAccess.getPredicateAccess().getBelongsBelongsStateParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__BelongsVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getBelongsVariableVariablesParserRuleCall_3_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicateAccess().getBelongsVariableVariablesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__VasOutputAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getVasOutputPredicatePostCondition2ParserRuleCall_5_0()); }
		rulePredicatePostCondition2
		{ after(grammarAccess.getPredicateAccess().getVasOutputPredicatePostCondition2ParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__VasStateChangeAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicateAccess().getVasStateChangePredicatePostCondition1ParserRuleCall_7_0()); }
		rulePredicatePostCondition1
		{ after(grammarAccess.getPredicateAccess().getVasStateChangePredicatePostCondition1ParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariablesAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariablesAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Condition11Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition1Access().getCondition11VariablesParserRuleCall_0_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition1Access().getCondition11VariablesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Condition12Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition1Access().getCondition12VariablesParserRuleCall_3_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition1Access().getCondition12VariablesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Condition13Assignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition1Access().getCondition13VariablesParserRuleCall_5_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition1Access().getCondition13VariablesParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition1__Condition13Assignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition1Access().getCondition13VariablesParserRuleCall_6_1_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition1Access().getCondition13VariablesParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Condition21Assignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition2Access().getCondition21VariablesParserRuleCall_0_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition2Access().getCondition21VariablesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Condition22Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition2Access().getCondition22VariablesParserRuleCall_2_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition2Access().getCondition22VariablesParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Condition23Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition2Access().getCondition23VariablesParserRuleCall_4_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition2Access().getCondition23VariablesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PredicatePostCondition2__Condition23Assignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPredicatePostCondition2Access().getCondition23VariablesParserRuleCall_5_1_0()); }
		ruleVariables
		{ after(grammarAccess.getPredicatePostCondition2Access().getCondition23VariablesParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
