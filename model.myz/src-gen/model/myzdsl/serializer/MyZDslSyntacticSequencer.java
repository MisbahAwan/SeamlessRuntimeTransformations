/*
 * generated by Xtext 2.25.0
 */
package model.myzdsl.serializer;

import com.google.inject.Inject;
import java.util.List;
import model.myzdsl.services.MyZDslGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class MyZDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected MyZDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_InitialState___DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNSParserRuleCall_4_0_2_VBPParserRuleCall_4_0_3___or___JJParserRuleCall_4_1_0_NNSParserRuleCall_4_1_1_VBPParserRuleCall_4_1_2__;
	protected AbstractElementAlias match_InitialState___DTParserRuleCall_7_0_0_JJParserRuleCall_7_0_1_NNSParserRuleCall_7_0_2_VBPParserRuleCall_7_0_3___or___JJParserRuleCall_7_1_0_NNSParserRuleCall_7_1_1_VBPParserRuleCall_7_1_2__;
	protected AbstractElementAlias match_PredicatePostCondition1_AndKeyword_4_q;
	protected AbstractElementAlias match_PredicatePostCondition1_NewKeyword_2_q;
	protected AbstractElementAlias match_PredicatePostCondition1_WithKeyword_1_q;
	protected AbstractElementAlias match_PredicatePostCondition2_BELONGTOKeyword_3_q;
	protected AbstractElementAlias match_PredicatePostCondition2_WhereKeyword_1_q;
	protected AbstractElementAlias match_Predicate_____DTParserRuleCall_0_0_0_JJParserRuleCall_0_0_1_NNParserRuleCall_0_0_2_NNParserRuleCall_0_0_3_VBZParserRuleCall_0_0_4___or___JJParserRuleCall_0_1_0_NNParserRuleCall_0_1_1_NNParserRuleCall_0_1_2_VBZParserRuleCall_0_1_3____q;
	protected AbstractElementAlias match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q;
	protected AbstractElementAlias match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3___or_______DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1________q;
	protected AbstractElementAlias match_Predicate_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1____q;
	protected AbstractElementAlias match_Schema___DTParserRuleCall_3_0_0_NNParserRuleCall_3_0_1_NNSParserRuleCall_3_0_2_VBPParserRuleCall_3_0_3___or___NNParserRuleCall_3_1_0_NNSParserRuleCall_3_1_1_VBPParserRuleCall_3_1_2__;
	protected AbstractElementAlias match_Schema___DTParserRuleCall_6_0_0_NNParserRuleCall_6_0_1_NNSParserRuleCall_6_0_2_VBPParserRuleCall_6_0_3___or___NNParserRuleCall_6_1_0_NNSParserRuleCall_6_1_1_VBPParserRuleCall_6_1_2__;
	protected AbstractElementAlias match_SystemStateSpace_NNSParserRuleCall_1_2_or___DTParserRuleCall_1_0_0_NNSParserRuleCall_1_0_1_VBPParserRuleCall_1_0_2___or___NNSParserRuleCall_1_1_0_VBPParserRuleCall_1_1_1__;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (MyZDslGrammarAccess) access;
		match_InitialState___DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNSParserRuleCall_4_0_2_VBPParserRuleCall_4_0_3___or___JJParserRuleCall_4_1_0_NNSParserRuleCall_4_1_1_VBPParserRuleCall_4_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getDTParserRuleCall_4_0_0()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_0_1()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_0_2()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_0_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getJJParserRuleCall_4_1_0()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getNNSParserRuleCall_4_1_1()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getVBPParserRuleCall_4_1_2())));
		match_InitialState___DTParserRuleCall_7_0_0_JJParserRuleCall_7_0_1_NNSParserRuleCall_7_0_2_VBPParserRuleCall_7_0_3___or___JJParserRuleCall_7_1_0_NNSParserRuleCall_7_1_1_VBPParserRuleCall_7_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getDTParserRuleCall_7_0_0()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_0_1()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_0_2()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_0_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getJJParserRuleCall_7_1_0()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getNNSParserRuleCall_7_1_1()), new TokenAlias(false, false, grammarAccess.getInitialStateAccess().getVBPParserRuleCall_7_1_2())));
		match_PredicatePostCondition1_AndKeyword_4_q = new TokenAlias(false, true, grammarAccess.getPredicatePostCondition1Access().getAndKeyword_4());
		match_PredicatePostCondition1_NewKeyword_2_q = new TokenAlias(false, true, grammarAccess.getPredicatePostCondition1Access().getNewKeyword_2());
		match_PredicatePostCondition1_WithKeyword_1_q = new TokenAlias(false, true, grammarAccess.getPredicatePostCondition1Access().getWithKeyword_1());
		match_PredicatePostCondition2_BELONGTOKeyword_3_q = new TokenAlias(false, true, grammarAccess.getPredicatePostCondition2Access().getBELONGTOKeyword_3());
		match_PredicatePostCondition2_WhereKeyword_1_q = new TokenAlias(false, true, grammarAccess.getPredicatePostCondition2Access().getWhereKeyword_1());
		match_Predicate_____DTParserRuleCall_0_0_0_JJParserRuleCall_0_0_1_NNParserRuleCall_0_0_2_NNParserRuleCall_0_0_3_VBZParserRuleCall_0_0_4___or___JJParserRuleCall_0_1_0_NNParserRuleCall_0_1_1_NNParserRuleCall_0_1_2_VBZParserRuleCall_0_1_3____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_0_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_0_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_0_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_0_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_0_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_0_1_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_0_1_3())));
		match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_4_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_0_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_1_3())));
		match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3___or_______DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1________q = new AlternativeAlias(false, true, new GroupAlias(false, false, new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_4_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_0_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_1_3()))), new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_6_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_6_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_4()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_0_5())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_6_2_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_2_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_2_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_1_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_4_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_0_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_4_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_4_1_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_4_1_3())));
		match_Predicate_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1____q = new AlternativeAlias(false, true, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getDTParserRuleCall_6_0_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_6_0_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_0_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_0_4()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_0_5())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getJJParserRuleCall_6_2_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_1()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBGParserRuleCall_6_2_2()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_2_3()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_2_4())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getPredicateAccess().getNNParserRuleCall_6_1_0()), new TokenAlias(false, false, grammarAccess.getPredicateAccess().getVBZParserRuleCall_6_1_1())));
		match_Schema___DTParserRuleCall_3_0_0_NNParserRuleCall_3_0_1_NNSParserRuleCall_3_0_2_VBPParserRuleCall_3_0_3___or___NNParserRuleCall_3_1_0_NNSParserRuleCall_3_1_1_VBPParserRuleCall_3_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSchemaAccess().getDTParserRuleCall_3_0_0()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNParserRuleCall_3_0_1()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_0_2()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_0_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNParserRuleCall_3_1_0()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNSParserRuleCall_3_1_1()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getVBPParserRuleCall_3_1_2())));
		match_Schema___DTParserRuleCall_6_0_0_NNParserRuleCall_6_0_1_NNSParserRuleCall_6_0_2_VBPParserRuleCall_6_0_3___or___NNParserRuleCall_6_1_0_NNSParserRuleCall_6_1_1_VBPParserRuleCall_6_1_2__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSchemaAccess().getDTParserRuleCall_6_0_0()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNParserRuleCall_6_0_1()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_0_2()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_0_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNParserRuleCall_6_1_0()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getNNSParserRuleCall_6_1_1()), new TokenAlias(false, false, grammarAccess.getSchemaAccess().getVBPParserRuleCall_6_1_2())));
		match_SystemStateSpace_NNSParserRuleCall_1_2_or___DTParserRuleCall_1_0_0_NNSParserRuleCall_1_0_1_VBPParserRuleCall_1_0_2___or___NNSParserRuleCall_1_1_0_VBPParserRuleCall_1_1_1__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getDTParserRuleCall_1_0_0()), new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_0_1()), new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_0_2())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_1_0()), new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getVBPParserRuleCall_1_1_1())), new TokenAlias(false, false, grammarAccess.getSystemStateSpaceAccess().getNNSParserRuleCall_1_2()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getDTRule())
			return getDTToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getJJRule())
			return getJJToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getMDRule())
			return getMDToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNNRule())
			return getNNToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getNNSRule())
			return getNNSToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getVBGRule())
			return getVBGToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getVBPRule())
			return getVBPToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getVBZRule())
			return getVBZToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * DT:
	 * 	'The';
	 */
	protected String getDTToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "The";
	}
	
	/**
	 * JJ:
	 * 	'predicate' | 'initial' | 'postcondition' | 'post condition';
	 */
	protected String getJJToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "predicate";
	}
	
	/**
	 * MD:
	 * 	'will' | 'are';
	 */
	protected String getMDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "will";
	}
	
	/**
	 * NN:
	 * 	'system' | 'state' |'space'| 'initial' | 'predicate' |'variable'|'variables'|'schema'|'operation'|'function'|'input'|'output'|'name';
	 */
	protected String getNNToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "system";
	}
	
	/**
	 * NNS:
	 * 	'variables'| 'parameters'| 'features'|'variable'| 'parameter'| 'feature';
	 */
	protected String getNNSToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "variables";
	}
	
	/**
	 * VBG: 
	 * 	'changing' |'change';
	 */
	protected String getVBGToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "changing";
	}
	
	/**
	 * VBP:
	 * 	'include' | 'includes' | 'is' | 'are';
	 */
	protected String getVBPToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "include";
	}
	
	/**
	 * VBZ:
	 * 	'is' | 'are' ;
	 */
	protected String getVBZToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "is";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_InitialState___DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNSParserRuleCall_4_0_2_VBPParserRuleCall_4_0_3___or___JJParserRuleCall_4_1_0_NNSParserRuleCall_4_1_1_VBPParserRuleCall_4_1_2__.equals(syntax))
				emit_InitialState___DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNSParserRuleCall_4_0_2_VBPParserRuleCall_4_0_3___or___JJParserRuleCall_4_1_0_NNSParserRuleCall_4_1_1_VBPParserRuleCall_4_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_InitialState___DTParserRuleCall_7_0_0_JJParserRuleCall_7_0_1_NNSParserRuleCall_7_0_2_VBPParserRuleCall_7_0_3___or___JJParserRuleCall_7_1_0_NNSParserRuleCall_7_1_1_VBPParserRuleCall_7_1_2__.equals(syntax))
				emit_InitialState___DTParserRuleCall_7_0_0_JJParserRuleCall_7_0_1_NNSParserRuleCall_7_0_2_VBPParserRuleCall_7_0_3___or___JJParserRuleCall_7_1_0_NNSParserRuleCall_7_1_1_VBPParserRuleCall_7_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PredicatePostCondition1_AndKeyword_4_q.equals(syntax))
				emit_PredicatePostCondition1_AndKeyword_4_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PredicatePostCondition1_NewKeyword_2_q.equals(syntax))
				emit_PredicatePostCondition1_NewKeyword_2_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PredicatePostCondition1_WithKeyword_1_q.equals(syntax))
				emit_PredicatePostCondition1_WithKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PredicatePostCondition2_BELONGTOKeyword_3_q.equals(syntax))
				emit_PredicatePostCondition2_BELONGTOKeyword_3_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PredicatePostCondition2_WhereKeyword_1_q.equals(syntax))
				emit_PredicatePostCondition2_WhereKeyword_1_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Predicate_____DTParserRuleCall_0_0_0_JJParserRuleCall_0_0_1_NNParserRuleCall_0_0_2_NNParserRuleCall_0_0_3_VBZParserRuleCall_0_0_4___or___JJParserRuleCall_0_1_0_NNParserRuleCall_0_1_1_NNParserRuleCall_0_1_2_VBZParserRuleCall_0_1_3____q.equals(syntax))
				emit_Predicate_____DTParserRuleCall_0_0_0_JJParserRuleCall_0_0_1_NNParserRuleCall_0_0_2_NNParserRuleCall_0_0_3_VBZParserRuleCall_0_0_4___or___JJParserRuleCall_0_1_0_NNParserRuleCall_0_1_1_NNParserRuleCall_0_1_2_VBZParserRuleCall_0_1_3____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q.equals(syntax))
				emit_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3___or_______DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1________q.equals(syntax))
				emit_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3___or_______DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1________q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Predicate_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1____q.equals(syntax))
				emit_Predicate_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1____q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Schema___DTParserRuleCall_3_0_0_NNParserRuleCall_3_0_1_NNSParserRuleCall_3_0_2_VBPParserRuleCall_3_0_3___or___NNParserRuleCall_3_1_0_NNSParserRuleCall_3_1_1_VBPParserRuleCall_3_1_2__.equals(syntax))
				emit_Schema___DTParserRuleCall_3_0_0_NNParserRuleCall_3_0_1_NNSParserRuleCall_3_0_2_VBPParserRuleCall_3_0_3___or___NNParserRuleCall_3_1_0_NNSParserRuleCall_3_1_1_VBPParserRuleCall_3_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Schema___DTParserRuleCall_6_0_0_NNParserRuleCall_6_0_1_NNSParserRuleCall_6_0_2_VBPParserRuleCall_6_0_3___or___NNParserRuleCall_6_1_0_NNSParserRuleCall_6_1_1_VBPParserRuleCall_6_1_2__.equals(syntax))
				emit_Schema___DTParserRuleCall_6_0_0_NNParserRuleCall_6_0_1_NNSParserRuleCall_6_0_2_VBPParserRuleCall_6_0_3___or___NNParserRuleCall_6_1_0_NNSParserRuleCall_6_1_1_VBPParserRuleCall_6_1_2__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SystemStateSpace_NNSParserRuleCall_1_2_or___DTParserRuleCall_1_0_0_NNSParserRuleCall_1_0_1_VBPParserRuleCall_1_0_2___or___NNSParserRuleCall_1_1_0_VBPParserRuleCall_1_1_1__.equals(syntax))
				emit_SystemStateSpace_NNSParserRuleCall_1_2_or___DTParserRuleCall_1_0_0_NNSParserRuleCall_1_0_1_VBPParserRuleCall_1_0_2___or___NNSParserRuleCall_1_1_0_VBPParserRuleCall_1_1_1__(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     (DT JJ NNS VBP) | (JJ NNS VBP)
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) variables+=Variables
	 */
	protected void emit_InitialState___DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNSParserRuleCall_4_0_2_VBPParserRuleCall_4_0_3___or___JJParserRuleCall_4_1_0_NNSParserRuleCall_4_1_1_VBPParserRuleCall_4_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (DT JJ NNS VBP) | (JJ NNS VBP)
	 *
	 * This ambiguous syntax occurs at:
	 *     variables+=Variables (ambiguity) pred+=Variables
	 */
	protected void emit_InitialState___DTParserRuleCall_7_0_0_JJParserRuleCall_7_0_1_NNSParserRuleCall_7_0_2_VBPParserRuleCall_7_0_3___or___JJParserRuleCall_7_1_0_NNSParserRuleCall_7_1_1_VBPParserRuleCall_7_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'and '?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'with'? 'new'? (ambiguity) condition13=Variables
	 *     condition11=Variables 'with'? 'new'? (ambiguity) condition13=Variables
	 *     condition12=Variables (ambiguity) condition13=Variables
	 */
	protected void emit_PredicatePostCondition1_AndKeyword_4_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'new'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'with'? (ambiguity) 'and '? condition13=Variables
	 *     (rule start) 'with'? (ambiguity) condition12=Variables
	 *     condition11=Variables 'with'? (ambiguity) 'and '? condition13=Variables
	 *     condition11=Variables 'with'? (ambiguity) condition12=Variables
	 */
	protected void emit_PredicatePostCondition1_NewKeyword_2_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'with'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'new'? 'and '? condition13=Variables
	 *     (rule start) (ambiguity) 'new'? condition12=Variables
	 *     condition11=Variables (ambiguity) 'new'? 'and '? condition13=Variables
	 *     condition11=Variables (ambiguity) 'new'? condition12=Variables
	 */
	protected void emit_PredicatePostCondition1_WithKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'BELONG TO'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'where'? (ambiguity) condition23=Variables
	 *     condition21=Variables 'where'? (ambiguity) condition23=Variables
	 *     condition22=Variables (ambiguity) condition23=Variables
	 */
	protected void emit_PredicatePostCondition2_BELONGTOKeyword_3_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     'where'?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) 'BELONG TO'? condition23=Variables
	 *     (rule start) (ambiguity) condition22=Variables
	 *     condition21=Variables (ambiguity) 'BELONG TO'? condition23=Variables
	 *     condition21=Variables (ambiguity) condition22=Variables
	 */
	protected void emit_PredicatePostCondition2_WhereKeyword_1_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) ((DT JJ NN NN VBZ) | (((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))) | (JJ NN NN VBZ))? (rule start)
	 *     (rule start) (ambiguity) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? (rule start)
	 *     (rule start) (ambiguity) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? vasStateChange+=PredicatePostCondition1
	 *     (rule start) (ambiguity) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? vasOutput+=PredicatePostCondition2
	 *     (rule start) (ambiguity) belongs=BelongsState
	 *     (rule start) (ambiguity) belongsVariable=Variables
	 *     (rule start) (ambiguity) vasInput+=Variables
	 */
	protected void emit_Predicate_____DTParserRuleCall_0_0_0_JJParserRuleCall_0_0_1_NNParserRuleCall_0_0_2_NNParserRuleCall_0_0_3_VBZParserRuleCall_0_0_4___or___JJParserRuleCall_0_1_0_NNParserRuleCall_0_1_1_NNParserRuleCall_0_1_2_VBZParserRuleCall_0_1_3____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? (rule start)
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? vasStateChange+=PredicatePostCondition1
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) vasOutput+=PredicatePostCondition2
	 *     belongs=BelongsState (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? (rule end)
	 *     belongs=BelongsState (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? vasStateChange+=PredicatePostCondition1
	 *     belongs=BelongsState (ambiguity) vasOutput+=PredicatePostCondition2
	 *     belongsVariable=Variables (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? (rule end)
	 *     belongsVariable=Variables (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? vasStateChange+=PredicatePostCondition1
	 *     belongsVariable=Variables (ambiguity) vasOutput+=PredicatePostCondition2
	 *     vasInput+=Variables (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? (rule end)
	 *     vasInput+=Variables (ambiguity) ((DT JJ NN VBG NN VBZ) | (NN VBZ) | (JJ NN VBG NN VBZ))? vasStateChange+=PredicatePostCondition1
	 *     vasInput+=Variables (ambiguity) vasOutput+=PredicatePostCondition2
	 */
	protected void emit_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (DT JJ NN NN VBZ) | 
	  *         (
	  *             ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? 
	  *             (
	  *                 (
	  *                     DT 
	  *                     JJ 
	  *                     NN 
	  *                     VBG 
	  *                     NN 
	  *                     VBZ
	  *                 ) | 
	  *                 (NN VBZ) | 
	  *                 (JJ NN VBG NN VBZ)
	  *             )
	  *         ) | 
	  *         (JJ NN NN VBZ)
	  *     )?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) (rule start)
	 */
	protected void emit_Predicate_____DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3___or_______DTParserRuleCall_4_0_0_JJParserRuleCall_4_0_1_NNParserRuleCall_4_0_2_NNParserRuleCall_4_0_3_VBZParserRuleCall_4_0_4___or___JJParserRuleCall_4_1_0_NNParserRuleCall_4_1_1_NNParserRuleCall_4_1_2_VBZParserRuleCall_4_1_3____q_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1________q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             DT 
	  *             JJ 
	  *             NN 
	  *             VBG 
	  *             NN 
	  *             VBZ
	  *         ) | 
	  *         (NN VBZ) | 
	  *         (JJ NN VBG NN VBZ)
	  *     )?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) (rule start)
	 *     (rule start) ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) vasStateChange+=PredicatePostCondition1
	 *     belongs=BelongsState ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) (rule end)
	 *     belongs=BelongsState ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) vasStateChange+=PredicatePostCondition1
	 *     belongsVariable=Variables ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) (rule end)
	 *     belongsVariable=Variables ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) vasStateChange+=PredicatePostCondition1
	 *     vasInput+=Variables ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) (rule end)
	 *     vasInput+=Variables ((DT JJ NN NN VBZ) | (JJ NN NN VBZ))? (ambiguity) vasStateChange+=PredicatePostCondition1
	 *     vasOutput+=PredicatePostCondition2 (ambiguity) (rule end)
	 *     vasOutput+=PredicatePostCondition2 (ambiguity) vasStateChange+=PredicatePostCondition1
	 */
	protected void emit_Predicate_____DTParserRuleCall_6_0_0_JJParserRuleCall_6_0_1_NNParserRuleCall_6_0_2_VBGParserRuleCall_6_0_3_NNParserRuleCall_6_0_4_VBZParserRuleCall_6_0_5___or___JJParserRuleCall_6_2_0_NNParserRuleCall_6_2_1_VBGParserRuleCall_6_2_2_NNParserRuleCall_6_2_3_VBZParserRuleCall_6_2_4___or___NNParserRuleCall_6_1_0_VBZParserRuleCall_6_1_1____q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (DT NN NNS VBP) | (NN NNS VBP)
	 *
	 * This ambiguous syntax occurs at:
	 *     nameSchema=EString (ambiguity) varsInput+=Variables
	 */
	protected void emit_Schema___DTParserRuleCall_3_0_0_NNParserRuleCall_3_0_1_NNSParserRuleCall_3_0_2_VBPParserRuleCall_3_0_3___or___NNParserRuleCall_3_1_0_NNSParserRuleCall_3_1_1_VBPParserRuleCall_3_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (DT NN NNS VBP) | (NN NNS VBP)
	 *
	 * This ambiguous syntax occurs at:
	 *     varsInput+=Variables (ambiguity) varsOutput+=Variables
	 */
	protected void emit_Schema___DTParserRuleCall_6_0_0_NNParserRuleCall_6_0_1_NNSParserRuleCall_6_0_2_VBPParserRuleCall_6_0_3___or___NNParserRuleCall_6_1_0_NNSParserRuleCall_6_1_1_VBPParserRuleCall_6_1_2__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (DT NNS VBP) | (NNS VBP) | NNS
	 *
	 * This ambiguous syntax occurs at:
	 *     name=ID (ambiguity) variables+=Variables
	 *     name=ID VBZ NN NN NN (ambiguity) variables+=Variables
	 */
	protected void emit_SystemStateSpace_NNSParserRuleCall_1_2_or___DTParserRuleCall_1_0_0_NNSParserRuleCall_1_0_1_VBPParserRuleCall_1_0_2___or___NNSParserRuleCall_1_1_0_VBPParserRuleCall_1_1_1__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
