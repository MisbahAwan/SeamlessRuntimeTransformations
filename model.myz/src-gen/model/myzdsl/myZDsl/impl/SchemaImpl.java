/**
 * generated by Xtext 2.25.0
 */
package model.myzdsl.myZDsl.impl;

import java.util.Collection;

import model.myzdsl.myZDsl.MyZDslPackage;
import model.myzdsl.myZDsl.Predicate;
import model.myzdsl.myZDsl.Schema;
import model.myzdsl.myZDsl.Variables;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Schema</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getName <em>Name</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getState <em>State</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getNameSchema <em>Name Schema</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getVarsInput <em>Vars Input</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getVarsOutput <em>Vars Output</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SchemaImpl#getPredicates <em>Predicates</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SchemaImpl extends MinimalEObjectImpl.Container implements Schema
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getState() <em>State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getState()
   * @generated
   * @ordered
   */
  protected static final String STATE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getState() <em>State</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getState()
   * @generated
   * @ordered
   */
  protected String state = STATE_EDEFAULT;

  /**
   * The default value of the '{@link #getNameSchema() <em>Name Schema</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameSchema()
   * @generated
   * @ordered
   */
  protected static final String NAME_SCHEMA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNameSchema() <em>Name Schema</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNameSchema()
   * @generated
   * @ordered
   */
  protected String nameSchema = NAME_SCHEMA_EDEFAULT;

  /**
   * The cached value of the '{@link #getVarsInput() <em>Vars Input</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarsInput()
   * @generated
   * @ordered
   */
  protected EList<Variables> varsInput;

  /**
   * The cached value of the '{@link #getVarsOutput() <em>Vars Output</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarsOutput()
   * @generated
   * @ordered
   */
  protected EList<Variables> varsOutput;

  /**
   * The cached value of the '{@link #getPredicates() <em>Predicates</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredicates()
   * @generated
   * @ordered
   */
  protected EList<Predicate> predicates;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SchemaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyZDslPackage.Literals.SCHEMA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SCHEMA__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getState()
  {
    return state;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setState(String newState)
  {
    String oldState = state;
    state = newState;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SCHEMA__STATE, oldState, state));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNameSchema()
  {
    return nameSchema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNameSchema(String newNameSchema)
  {
    String oldNameSchema = nameSchema;
    nameSchema = newNameSchema;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SCHEMA__NAME_SCHEMA, oldNameSchema, nameSchema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variables> getVarsInput()
  {
    if (varsInput == null)
    {
      varsInput = new EObjectContainmentEList<Variables>(Variables.class, this, MyZDslPackage.SCHEMA__VARS_INPUT);
    }
    return varsInput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variables> getVarsOutput()
  {
    if (varsOutput == null)
    {
      varsOutput = new EObjectContainmentEList<Variables>(Variables.class, this, MyZDslPackage.SCHEMA__VARS_OUTPUT);
    }
    return varsOutput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Predicate> getPredicates()
  {
    if (predicates == null)
    {
      predicates = new EObjectContainmentEList<Predicate>(Predicate.class, this, MyZDslPackage.SCHEMA__PREDICATES);
    }
    return predicates;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyZDslPackage.SCHEMA__VARS_INPUT:
        return ((InternalEList<?>)getVarsInput()).basicRemove(otherEnd, msgs);
      case MyZDslPackage.SCHEMA__VARS_OUTPUT:
        return ((InternalEList<?>)getVarsOutput()).basicRemove(otherEnd, msgs);
      case MyZDslPackage.SCHEMA__PREDICATES:
        return ((InternalEList<?>)getPredicates()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyZDslPackage.SCHEMA__NAME:
        return getName();
      case MyZDslPackage.SCHEMA__STATE:
        return getState();
      case MyZDslPackage.SCHEMA__NAME_SCHEMA:
        return getNameSchema();
      case MyZDslPackage.SCHEMA__VARS_INPUT:
        return getVarsInput();
      case MyZDslPackage.SCHEMA__VARS_OUTPUT:
        return getVarsOutput();
      case MyZDslPackage.SCHEMA__PREDICATES:
        return getPredicates();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyZDslPackage.SCHEMA__NAME:
        setName((String)newValue);
        return;
      case MyZDslPackage.SCHEMA__STATE:
        setState((String)newValue);
        return;
      case MyZDslPackage.SCHEMA__NAME_SCHEMA:
        setNameSchema((String)newValue);
        return;
      case MyZDslPackage.SCHEMA__VARS_INPUT:
        getVarsInput().clear();
        getVarsInput().addAll((Collection<? extends Variables>)newValue);
        return;
      case MyZDslPackage.SCHEMA__VARS_OUTPUT:
        getVarsOutput().clear();
        getVarsOutput().addAll((Collection<? extends Variables>)newValue);
        return;
      case MyZDslPackage.SCHEMA__PREDICATES:
        getPredicates().clear();
        getPredicates().addAll((Collection<? extends Predicate>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SCHEMA__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyZDslPackage.SCHEMA__STATE:
        setState(STATE_EDEFAULT);
        return;
      case MyZDslPackage.SCHEMA__NAME_SCHEMA:
        setNameSchema(NAME_SCHEMA_EDEFAULT);
        return;
      case MyZDslPackage.SCHEMA__VARS_INPUT:
        getVarsInput().clear();
        return;
      case MyZDslPackage.SCHEMA__VARS_OUTPUT:
        getVarsOutput().clear();
        return;
      case MyZDslPackage.SCHEMA__PREDICATES:
        getPredicates().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SCHEMA__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyZDslPackage.SCHEMA__STATE:
        return STATE_EDEFAULT == null ? state != null : !STATE_EDEFAULT.equals(state);
      case MyZDslPackage.SCHEMA__NAME_SCHEMA:
        return NAME_SCHEMA_EDEFAULT == null ? nameSchema != null : !NAME_SCHEMA_EDEFAULT.equals(nameSchema);
      case MyZDslPackage.SCHEMA__VARS_INPUT:
        return varsInput != null && !varsInput.isEmpty();
      case MyZDslPackage.SCHEMA__VARS_OUTPUT:
        return varsOutput != null && !varsOutput.isEmpty();
      case MyZDslPackage.SCHEMA__PREDICATES:
        return predicates != null && !predicates.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", state: ");
    result.append(state);
    result.append(", nameSchema: ");
    result.append(nameSchema);
    result.append(')');
    return result.toString();
  }

} //SchemaImpl
