/**
 * generated by Xtext 2.25.0
 */
package model.myzdsl.myZDsl.impl;

import model.myzdsl.myZDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyZDslFactoryImpl extends EFactoryImpl implements MyZDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyZDslFactory init()
  {
    try
    {
      MyZDslFactory theMyZDslFactory = (MyZDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyZDslPackage.eNS_URI);
      if (theMyZDslFactory != null)
      {
        return theMyZDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyZDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyZDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyZDslPackage.MY_ZMODEL: return createMyZModel();
      case MyZDslPackage.SYSTEM_STATE_SPACE: return createSystemStateSpace();
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE: return createSystemStateSpacePredicate();
      case MyZDslPackage.INITIAL_STATE: return createInitialState();
      case MyZDslPackage.SCHEMA: return createSchema();
      case MyZDslPackage.PREDICATE: return createPredicate();
      case MyZDslPackage.VARIABLES: return createVariables();
      case MyZDslPackage.PREDICATE_POST_CONDITION1: return createPredicatePostCondition1();
      case MyZDslPackage.PREDICATE_POST_CONDITION2: return createPredicatePostCondition2();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyZModel createMyZModel()
  {
    MyZModelImpl myZModel = new MyZModelImpl();
    return myZModel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SystemStateSpace createSystemStateSpace()
  {
    SystemStateSpaceImpl systemStateSpace = new SystemStateSpaceImpl();
    return systemStateSpace;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SystemStateSpacePredicate createSystemStateSpacePredicate()
  {
    SystemStateSpacePredicateImpl systemStateSpacePredicate = new SystemStateSpacePredicateImpl();
    return systemStateSpacePredicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InitialState createInitialState()
  {
    InitialStateImpl initialState = new InitialStateImpl();
    return initialState;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Schema createSchema()
  {
    SchemaImpl schema = new SchemaImpl();
    return schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Predicate createPredicate()
  {
    PredicateImpl predicate = new PredicateImpl();
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variables createVariables()
  {
    VariablesImpl variables = new VariablesImpl();
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicatePostCondition1 createPredicatePostCondition1()
  {
    PredicatePostCondition1Impl predicatePostCondition1 = new PredicatePostCondition1Impl();
    return predicatePostCondition1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PredicatePostCondition2 createPredicatePostCondition2()
  {
    PredicatePostCondition2Impl predicatePostCondition2 = new PredicatePostCondition2Impl();
    return predicatePostCondition2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyZDslPackage getMyZDslPackage()
  {
    return (MyZDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyZDslPackage getPackage()
  {
    return MyZDslPackage.eINSTANCE;
  }

} //MyZDslFactoryImpl
