/**
 * generated by Xtext 2.25.0
 */
package model.myzdsl.myZDsl.impl;

import java.util.Collection;

import model.myzdsl.myZDsl.MyZDslPackage;
import model.myzdsl.myZDsl.SystemStateSpace;
import model.myzdsl.myZDsl.SystemStateSpacePredicate;
import model.myzdsl.myZDsl.Variables;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>System State Space</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpaceImpl#getName <em>Name</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpaceImpl#getVariables <em>Variables</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpaceImpl#getPredicate <em>Predicate</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SystemStateSpaceImpl extends MinimalEObjectImpl.Container implements SystemStateSpace
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariables() <em>Variables</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariables()
   * @generated
   * @ordered
   */
  protected EList<Variables> variables;

  /**
   * The cached value of the '{@link #getPredicate() <em>Predicate</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredicate()
   * @generated
   * @ordered
   */
  protected EList<SystemStateSpacePredicate> predicate;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SystemStateSpaceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyZDslPackage.Literals.SYSTEM_STATE_SPACE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SYSTEM_STATE_SPACE__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variables> getVariables()
  {
    if (variables == null)
    {
      variables = new EObjectContainmentEList<Variables>(Variables.class, this, MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES);
    }
    return variables;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SystemStateSpacePredicate> getPredicate()
  {
    if (predicate == null)
    {
      predicate = new EObjectContainmentEList<SystemStateSpacePredicate>(SystemStateSpacePredicate.class, this, MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE);
    }
    return predicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES:
        return ((InternalEList<?>)getVariables()).basicRemove(otherEnd, msgs);
      case MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE:
        return ((InternalEList<?>)getPredicate()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE__NAME:
        return getName();
      case MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES:
        return getVariables();
      case MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE:
        return getPredicate();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE__NAME:
        setName((String)newValue);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES:
        getVariables().clear();
        getVariables().addAll((Collection<? extends Variables>)newValue);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE:
        getPredicate().clear();
        getPredicate().addAll((Collection<? extends SystemStateSpacePredicate>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES:
        getVariables().clear();
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE:
        getPredicate().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyZDslPackage.SYSTEM_STATE_SPACE__VARIABLES:
        return variables != null && !variables.isEmpty();
      case MyZDslPackage.SYSTEM_STATE_SPACE__PREDICATE:
        return predicate != null && !predicate.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //SystemStateSpaceImpl
