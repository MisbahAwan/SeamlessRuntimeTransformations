/**
 * generated by Xtext 2.25.0
 */
package model.myzdsl.myZDsl.impl;

import java.util.Collection;

import model.myzdsl.myZDsl.MyZDslPackage;
import model.myzdsl.myZDsl.SystemStateSpacePredicate;
import model.myzdsl.myZDsl.Variables;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>System State Space Predicate</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpacePredicateImpl#getVas <em>Vas</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpacePredicateImpl#getFunction <em>Function</em>}</li>
 *   <li>{@link model.myzdsl.myZDsl.impl.SystemStateSpacePredicateImpl#getPredicateVar <em>Predicate Var</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SystemStateSpacePredicateImpl extends MinimalEObjectImpl.Container implements SystemStateSpacePredicate
{
  /**
   * The cached value of the '{@link #getVas() <em>Vas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVas()
   * @generated
   * @ordered
   */
  protected EList<Variables> vas;

  /**
   * The default value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected static final String FUNCTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFunction() <em>Function</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunction()
   * @generated
   * @ordered
   */
  protected String function = FUNCTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getPredicateVar() <em>Predicate Var</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPredicateVar()
   * @generated
   * @ordered
   */
  protected Variables predicateVar;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SystemStateSpacePredicateImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyZDslPackage.Literals.SYSTEM_STATE_SPACE_PREDICATE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Variables> getVas()
  {
    if (vas == null)
    {
      vas = new EObjectContainmentEList<Variables>(Variables.class, this, MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS);
    }
    return vas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFunction()
  {
    return function;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFunction(String newFunction)
  {
    String oldFunction = function;
    function = newFunction;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__FUNCTION, oldFunction, function));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variables getPredicateVar()
  {
    return predicateVar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPredicateVar(Variables newPredicateVar, NotificationChain msgs)
  {
    Variables oldPredicateVar = predicateVar;
    predicateVar = newPredicateVar;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR, oldPredicateVar, newPredicateVar);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPredicateVar(Variables newPredicateVar)
  {
    if (newPredicateVar != predicateVar)
    {
      NotificationChain msgs = null;
      if (predicateVar != null)
        msgs = ((InternalEObject)predicateVar).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR, null, msgs);
      if (newPredicateVar != null)
        msgs = ((InternalEObject)newPredicateVar).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR, null, msgs);
      msgs = basicSetPredicateVar(newPredicateVar, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR, newPredicateVar, newPredicateVar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS:
        return ((InternalEList<?>)getVas()).basicRemove(otherEnd, msgs);
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR:
        return basicSetPredicateVar(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS:
        return getVas();
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__FUNCTION:
        return getFunction();
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR:
        return getPredicateVar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS:
        getVas().clear();
        getVas().addAll((Collection<? extends Variables>)newValue);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__FUNCTION:
        setFunction((String)newValue);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR:
        setPredicateVar((Variables)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS:
        getVas().clear();
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__FUNCTION:
        setFunction(FUNCTION_EDEFAULT);
        return;
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR:
        setPredicateVar((Variables)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__VAS:
        return vas != null && !vas.isEmpty();
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__FUNCTION:
        return FUNCTION_EDEFAULT == null ? function != null : !FUNCTION_EDEFAULT.equals(function);
      case MyZDslPackage.SYSTEM_STATE_SPACE_PREDICATE__PREDICATE_VAR:
        return predicateVar != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (function: ");
    result.append(function);
    result.append(')');
    return result.toString();
  }

} //SystemStateSpacePredicateImpl
